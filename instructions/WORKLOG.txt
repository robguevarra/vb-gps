add surplus logic sa superadmin reports and to the whole data. 
- trigger surplus compute or something

try to fix approval logic for surplus and leave request. 
- i think its trying to check who is assigned to the request, instead of just looking at the local church. 


finance
- recent transactions - lalabas lang dapat ng transactions ni finance mismo. 
- record donations not working yet

lead pastor
- not seeing anything


Get yourself up to speed with what we've done with the app so far. 

we're proceeding to the important and most tight/secure parts of the app. 

we need to start figuring out what the flow would be for manual remittance for the missionaries. 

do we need a pending table? knowing that this will be confirmed via xendit and xendit sometimes take time (we might get errors), what can we do? 

there's three ways/three sources for donor_donations to have entries.

1. campus director / missionaries can do manual remittance in their dashboards. right now the submit button just directly creates the entry in donor donations. But what that should do is to trigger a backend api call that will create an order link via xendit. however, remember that manual remittance allows for multiple partners entry. so i'm thinking, missionary enters parters N, then partner N goes to pending list, xendit sends link, xendit confirms/denies the transaction, we go back to pending list and do necessary thing: whether that's deleted or donor_donation is appended. This means, the missionary is the one doing the xendit transaction in behalf of the partners. so one transaction for multiple partner donations. 

this function does not exist yet, and do not create code yet. just brainstorm with me. 

2. finance officers can do their own remittance entries also, for those partners who have decided to give on sunday via envelopes/collection.
these entries are auto-approved, although i'm not sure what the best implementation for that should be. 

3. via website. we have a website form, that will call teh backend. backend calls xendit to produce invoice link. user gets reidirected to invoice link, then xendit confirms/denies tx, then webhook back to backend. backend records on donor_donations. 

do you get the flow? 

what do you think ?

the backend part is not yet done. nothing has been done yet on that end as I'm trying to figure out what the best implementation should be. What is the best implementation? What is industry standard? 




RLS commands

CREATE POLICY "Lead pastors can view their churches" ON "public"."local_churches"
FOR SELECT USING (
  EXISTS (
    SELECT 1 FROM profiles
    WHERE profiles.id = auth.uid()
    AND profiles.role = 'lead_pastor'
    AND local_churches.lead_pastor_id = profiles.id
  )
);

CREATE POLICY "Lead pastors can view their church requests" ON leave_requests
FOR SELECT USING (
  EXISTS (
    SELECT 1 FROM profiles pastor
    JOIN profiles missionary ON missionary.local_church_id = pastor.local_church_id
    WHERE pastor.id = auth.uid()
    AND pastor.role = 'lead_pastor'
    AND leave_requests.requester_id = missionary.id
  )
);

CREATE POLICY "Church leaders can view donations" ON donor_donations
FOR SELECT USING (
  EXISTS (
    SELECT 1 FROM profiles
    WHERE id = auth.uid()
    AND (role = 'lead_pastor' OR role = 'campus_director')
    AND EXISTS (
      SELECT 1 FROM profiles m
      WHERE m.local_church_id = profiles.local_church_id
      AND m.id = donor_donations.missionary_id
    )
  )
);

ALTER POLICY "Campus Director read profiles" ON profiles
USING (
  (role = 'campus_director' AND local_church_id = ANY(
    SELECT local_church_id FROM profiles WHERE id = auth.uid()
  )) OR
  id = auth.uid(
    
  )
);

